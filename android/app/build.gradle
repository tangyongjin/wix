apply plugin: "com.android.application"

import com.android.build.OutputFile
apply from: "../../node_modules/react-native/react.gradle"

def enableSeparateBuildPerCPUArchitecture = false

def enableProguardInReleaseBuilds = false

android {


    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }



    compileSdkVersion 25


    defaultConfig {
        applicationId "com.example"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        manifestPlaceholders = [
                JPUSH_APPKEY: "18063ab41fcc631fa011bcbd",
                APP_CHANNEL : "default"
        ]

        ndk {
            abiFilters "armeabi-v7a", "x86"
        }

        manifestPlaceholders = [
                JPUSH_APPKEY: "18063ab41fcc631fa011bcbd", //在此替换你的APPKey
                APP_CHANNEL: "developer-default"  
        ]

    }


    splits {
        abi {
            reset()
            enable enableSeparateBuildPerCPUArchitecture
            universalApk false  // If true, also generate a universal APK
            include "armeabi-v7a", "x86"
        }
    }
    

buildTypes {
        release {
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }


applicationVariants.all { variant ->
        variant.outputs.each { output ->
            // For each separate APK per architecture, set a unique version code as described here:
            // http://tools.android.com/tech-docs/new-build-system/user-guide/apk-splits
            def versionCodes = ["armeabi-v7a": 1, "x86": 2]
            def abi = output.getFilter(OutputFile.ABI)
            if (abi != null) {  // null for the universal-debug, universal-release variants
                output.versionCodeOverride =
                        versionCodes.get(abi) * 1048576 + defaultConfig.versionCode
            }
        }
    }

         

subprojects {
    afterEvaluate {project ->
        if (project.hasProperty("android")) {
            android {
                compileSdkVersion 25
                buildToolsVersion '25.0.1'
            }
        }
    }
}


    // applicationVariants are e.g. debug, release
    
}

dependencies {
    compile project(':react-native-webrtc')
    compile project(':jcore-react-native')
    compile project(':jpush-react-native')
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.facebook.react:react-native:+'
    compile project(':react-native-navigation')
    compile project(':react-native-camera')
    compile project(':react-native-sound')
    compile project(':react-native-background-timer')
    compile project(':jpush-react-native')  // 添加 jpush 依赖
    compile project(':jcore-react-native')  // 添加 jcore 依赖
    compile project(':react-native-vector-icons')
    compile project(':WebRTCModule') //增加 WebRTC
}


task copyDownloadableDepsToLibs(type: Copy) {
  from configurations.compile
  into 'libs'
}
